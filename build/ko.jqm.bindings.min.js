/*
 * ko.jqm.bindings v1.0.0
 * Copyright (c) 2011 CodeCatalyst, LLC.
 * Open source under the MIT License.
 */
(function(){var f,g,h;h=ko.bindingHandlers.value.update;ko.bindingHandlers.value.update=function(a,d){h(a,d);if(a.tagName==="SELECT")try{$(a).selectmenu("refresh")}catch(e){}else if(a.type==="range")try{$(a).slider("refresh")}catch(b){}};f=ko.bindingHandlers.checked.init;ko.bindingHandlers.checked.init=function(a,d){var e;f(a,d);e=function(){var b,c;if(a.type==="checkbox")c=a.checked;else if(a.type==="radio"&&a.checked)c=a.value;else return;b=d();if(a.type==="checkbox"&&ko.utils.unwrapObservable(b)instanceof
Array){c=ko.utils.arrayIndexOf(ko.utils.unwrapObservable(b),a.value);if(a.checked&&c<0)return b.push(a.value);else if(!a.checked&&c>=0)return b.splice(c,1)}else if(ko.isWriteableObservable(b)){if(b()!==c)return b(c)}else{b=allBindingsAccessor();if(b._ko_property_writers&&b._ko_property_writers.checked)return b._ko_property_writers.checked(c)}};$(a).is(":jqmData(role='none'), :jqmData(role='nojs')")||ko.utils.registerEventHandler(a,"change",e)};g=ko.bindingHandlers.checked.update;ko.bindingHandlers.checked.update=
function(a,d){g(a,d);if(a.type==="radio"||a.type==="checkbox")try{$(a).checkboxradio("refresh")}catch(e){}}}).call(this);
