/*
 * ko.jqm.bindings v1.0.1
 * Copyright (c) 2011 CodeCatalyst, LLC.
 * Open source under the MIT License.
 */
(function(){var g,h,i,e,j;e=function(a,c){var f;f=$(a);if(!f.is(":jqmData(role='none'), :jqmData(role='nojs')"))try{return f[c]("refresh")}catch(b){}};j=ko.bindingHandlers.value.update;ko.bindingHandlers.value.update=function(a,c){j(a,c);if(a.tagName==="SELECT")e(a,"selectmenu");else a.type==="range"&&e(a,"slider")};g=ko.bindingHandlers.checked.init;ko.bindingHandlers.checked.init=function(a,c){var f;g(a,c);f=function(){var b,d;if(a.type==="checkbox")d=a.checked;else if(a.type==="radio"&&a.checked)d=
a.value;else return;b=c();if(a.type==="checkbox"&&ko.utils.unwrapObservable(b)instanceof Array){d=ko.utils.arrayIndexOf(ko.utils.unwrapObservable(b),a.value);if(a.checked&&d<0)return b.push(a.value);else if(!a.checked&&d>=0)return b.splice(d,1)}else if(ko.isWriteableObservable(b)){if(b()!==d)return b(d)}else{b=allBindingsAccessor();if(b._ko_property_writers&&b._ko_property_writers.checked)return b._ko_property_writers.checked(d)}};$(a).is(":jqmData(role='none'), :jqmData(role='nojs')")||ko.utils.registerEventHandler(a,
"change",f)};h=ko.bindingHandlers.checked.update;ko.bindingHandlers.checked.update=function(a,c){h(a,c);if(a.type==="radio"||a.type==="checkbox")e(a,"checkboxradio")};i=ko.bindingHandlers.enable.update;ko.bindingHandlers.enable.update=function(a,c){i(a,c);if(a.tagName==="SELECT")e(a,"selectmenu");else switch(a.type){case "checkbox":case "radio":e(a,"checkboxradio");break;case "range":e(a,"slider")}}}).call(this);
